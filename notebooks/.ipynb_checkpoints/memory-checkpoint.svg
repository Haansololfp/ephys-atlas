<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>denoise.py:423:multichan_phase_shift_denoise_preshift_maxCH_neighbor_unshift (2,381,280 bytes, 0.02%)</title><rect x="1188.9" y="149" width="0.3" height="15.0" fill="rgb(239,119,2)" rx="2" ry="2" />
<text  x="1191.92" y="159.5" ></text>
</g>
<g >
<title>726351746.py:15:&lt;module&gt; (6,881,280 bytes, 0.07%)</title><rect x="11.2" y="165" width="0.8" height="15.0" fill="rgb(242,5,28)" rx="2" ry="2" />
<text  x="14.18" y="175.5" ></text>
</g>
<g >
<title>module.py:1501:_call_impl (1,369,600 bytes, 0.01%)</title><rect x="110.5" y="149" width="0.2" height="15.0" fill="rgb(221,52,10)" rx="2" ry="2" />
<text  x="113.52" y="159.5" ></text>
</g>
<g >
<title>interactiveshell.py:3064:_run_cell (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="245" width="1079.5" height="15.0" fill="rgb(218,28,52)" rx="2" ry="2" />
<text  x="113.52" y="255.5" >interactiveshell.py:3064:_run_cell</text>
</g>
<g >
<title>ipkernel.py:422:do_execute (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="293" width="1079.5" height="15.0" fill="rgb(248,229,8)" rx="2" ry="2" />
<text  x="113.52" y="303.5" >ipkernel.py:422:do_execute</text>
</g>
<g >
<title>activation.py:103:forward (33,770,880 bytes, 0.32%)</title><rect x="12.3" y="53" width="3.7" height="15.0" fill="rgb(235,119,20)" rx="2" ry="2" />
<text  x="15.27" y="63.5" ></text>
</g>
<g >
<title>denoise.py:371:multichan_phase_shift_denoise_preshift_maxCH_neighbor_unshift (7,053,312 bytes, 0.07%)</title><rect x="110.7" y="149" width="0.8" height="15.0" fill="rgb(221,69,30)" rx="2" ry="2" />
<text  x="113.70" y="159.5" ></text>
</g>
<g >
<title>conv.py:309:_conv_forward (1,369,600 bytes, 0.01%)</title><rect x="110.5" y="53" width="0.2" height="15.0" fill="rgb(249,41,23)" rx="2" ry="2" />
<text  x="113.52" y="63.5" ></text>
</g>
<g >
<title>kernelbase.py:513:dispatch_queue (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="357" width="1079.5" height="15.0" fill="rgb(221,217,8)" rx="2" ry="2" />
<text  x="113.52" y="367.5" >kernelbase.py:513:dispatch_queue</text>
</g>
<g >
<title>conv.py:309:_conv_forward (9,622,984,192 bytes, 91.30%)</title><rect x="111.5" y="37" width="1077.3" height="15.0" fill="rgb(249,69,46)" rx="2" ry="2" />
<text  x="114.49" y="47.5" >conv.py:309:_conv_forward</text>
</g>
<g >
<title>all (10,540,285,952 bytes, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(205,229,32)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>denoise.py:392:multichan_phase_shift_denoise_preshift_maxCH_neighbor_unshift (9,624,032,768 bytes, 91.31%)</title><rect x="111.5" y="149" width="1077.4" height="15.0" fill="rgb(221,49,28)" rx="2" ry="2" />
<text  x="114.49" y="159.5" >denoise.py:392:multichan_phase_shift_denoise_preshift_maxCH_neighbor_unshift</text>
</g>
<g >
<title>denoise.py:49:forward (1,048,576 bytes, 0.01%)</title><rect x="1188.8" y="117" width="0.1" height="15.0" fill="rgb(245,110,10)" rx="2" ry="2" />
<text  x="1191.80" y="127.5" ></text>
</g>
<g >
<title>interactiveshell.py:3009:run_cell (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="261" width="7.4" height="15.0" fill="rgb(214,70,35)" rx="2" ry="2" />
<text  x="14.08" y="271.5" ></text>
</g>
<g >
<title>&lt;gaps&gt; (7,878,506 bytes, 0.07%)</title><rect x="109.6" y="501" width="0.9" height="15.0" fill="rgb(208,190,48)" rx="2" ry="2" />
<text  x="112.64" y="511.5" ></text>
</g>
<g >
<title>interactiveshell.py:3269:run_cell_async (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="213" width="7.4" height="15.0" fill="rgb(234,203,43)" rx="2" ry="2" />
<text  x="14.08" y="223.5" ></text>
</g>
<g >
<title>module.py:1501:_call_impl (1,369,600 bytes, 0.01%)</title><rect x="110.5" y="85" width="0.2" height="15.0" fill="rgb(223,225,46)" rx="2" ry="2" />
<text  x="113.52" y="95.5" ></text>
</g>
<g >
<title>container.py:217:forward (15,442,240 bytes, 0.15%)</title><rect x="16.0" y="85" width="1.8" height="15.0" fill="rgb(232,226,11)" rx="2" ry="2" />
<text  x="19.05" y="95.5" ></text>
</g>
<g >
<title>module.py:1501:_call_impl (33,770,880 bytes, 0.32%)</title><rect x="12.3" y="101" width="3.7" height="15.0" fill="rgb(231,137,26)" rx="2" ry="2" />
<text  x="15.27" y="111.5" ></text>
</g>
<g >
<title>interactiveshell.py:3009:run_cell (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="261" width="1079.5" height="15.0" fill="rgb(220,34,37)" rx="2" ry="2" />
<text  x="113.52" y="271.5" >interactiveshell.py:3009:run_cell</text>
</g>
<g >
<title>runpy.py:196:_run_module_as_main (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="501" width="1079.5" height="15.0" fill="rgb(220,134,19)" rx="2" ry="2" />
<text  x="113.52" y="511.5" >runpy.py:196:_run_module_as_main</text>
</g>
<g >
<title>linear.py:114:forward (1,048,576 bytes, 0.01%)</title><rect x="1188.8" y="85" width="0.1" height="15.0" fill="rgb(206,25,2)" rx="2" ry="2" />
<text  x="1191.80" y="95.5" ></text>
</g>
<g >
<title>denoise.py:46:forward (9,622,984,192 bytes, 91.30%)</title><rect x="111.5" y="117" width="1077.3" height="15.0" fill="rgb(227,62,51)" rx="2" ry="2" />
<text  x="114.49" y="127.5" >denoise.py:46:forward</text>
</g>
<g >
<title>async_helpers.py:129:_pseudo_sync_runner (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="229" width="1079.5" height="15.0" fill="rgb(213,133,24)" rx="2" ry="2" />
<text  x="113.52" y="239.5" >async_helpers.py:129:_pseudo_sync_runner</text>
</g>
<g >
<title>ipkernel.py:422:do_execute (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="293" width="7.4" height="15.0" fill="rgb(254,111,53)" rx="2" ry="2" />
<text  x="14.08" y="303.5" ></text>
</g>
<g >
<title>stream_0 (10,540,285,952 bytes, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(253,14,14)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >stream_0</text>
</g>
<g >
<title>module.py:1501:_call_impl (15,442,240 bytes, 0.15%)</title><rect x="16.0" y="69" width="1.8" height="15.0" fill="rgb(224,76,10)" rx="2" ry="2" />
<text  x="19.05" y="79.5" ></text>
</g>
<g >
<title>interactiveshell.py:3448:run_ast_nodes (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="197" width="7.4" height="15.0" fill="rgb(219,50,7)" rx="2" ry="2" />
<text  x="14.08" y="207.5" ></text>
</g>
<g >
<title>ipykernel_launcher.py:17:&lt;module&gt; (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="469" width="7.4" height="15.0" fill="rgb(228,7,30)" rx="2" ry="2" />
<text  x="14.08" y="479.5" ></text>
</g>
<g >
<title>module.py:1501:_call_impl (9,624,032,768 bytes, 91.31%)</title><rect x="111.5" y="133" width="1077.4" height="15.0" fill="rgb(235,32,18)" rx="2" ry="2" />
<text  x="114.49" y="143.5" >module.py:1501:_call_impl</text>
</g>
<g >
<title>container.py:217:forward (9,622,984,192 bytes, 91.30%)</title><rect x="111.5" y="85" width="1077.3" height="15.0" fill="rgb(209,95,32)" rx="2" ry="2" />
<text  x="114.49" y="95.5" >container.py:217:forward</text>
</g>
<g >
<title>726351746.py:30:&lt;module&gt; (1,369,600 bytes, 0.01%)</title><rect x="110.5" y="165" width="0.2" height="15.0" fill="rgb(213,164,42)" rx="2" ry="2" />
<text  x="113.52" y="175.5" ></text>
</g>
<g >
<title>interactiveshell.py:3064:_run_cell (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="245" width="7.4" height="15.0" fill="rgb(231,164,49)" rx="2" ry="2" />
<text  x="14.08" y="255.5" ></text>
</g>
<g >
<title>kernelbase.py:409:dispatch_shell (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="325" width="1079.5" height="15.0" fill="rgb(253,107,27)" rx="2" ry="2" />
<text  x="113.52" y="335.5" >kernelbase.py:409:dispatch_shell</text>
</g>
<g >
<title>denoise.py:180:ptp (2,182,840 bytes, 0.02%)</title><rect x="1189.2" y="117" width="0.2" height="15.0" fill="rgb(206,177,51)" rx="2" ry="2" />
<text  x="1192.20" y="127.5" ></text>
</g>
<g >
<title>denoise.py:439:multichan_phase_shift_denoise_preshift_maxCH_neighbor_unshift (4,365,680 bytes, 0.04%)</title><rect x="1189.2" y="149" width="0.5" height="15.0" fill="rgb(248,173,43)" rx="2" ry="2" />
<text  x="1192.20" y="159.5" ></text>
</g>
<g >
<title>denoise.py:605:roll_by_gather (2,182,840 bytes, 0.02%)</title><rect x="12.0" y="133" width="0.3" height="15.0" fill="rgb(205,21,31)" rx="2" ry="2" />
<text  x="15.02" y="143.5" ></text>
</g>
<g >
<title>events.py:80:_run (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="373" width="7.4" height="15.0" fill="rgb(254,57,35)" rx="2" ry="2" />
<text  x="14.08" y="383.5" ></text>
</g>
<g >
<title>kernelbase.py:502:process_one (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="341" width="7.4" height="15.0" fill="rgb(228,21,33)" rx="2" ry="2" />
<text  x="14.08" y="351.5" ></text>
</g>
<g >
<title>module.py:1501:_call_impl (33,770,880 bytes, 0.32%)</title><rect x="12.3" y="69" width="3.7" height="15.0" fill="rgb(243,208,7)" rx="2" ry="2" />
<text  x="15.27" y="79.5" ></text>
</g>
<g >
<title>conv.py:313:forward (1,369,600 bytes, 0.01%)</title><rect x="110.5" y="69" width="0.2" height="15.0" fill="rgb(223,106,5)" rx="2" ry="2" />
<text  x="113.52" y="79.5" ></text>
</g>
<g >
<title>module.py:1501:_call_impl (15,442,240 bytes, 0.15%)</title><rect x="16.0" y="101" width="1.8" height="15.0" fill="rgb(209,35,1)" rx="2" ry="2" />
<text  x="19.05" y="111.5" ></text>
</g>
<g >
<title>kernelbase.py:513:dispatch_queue (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="357" width="7.4" height="15.0" fill="rgb(229,116,19)" rx="2" ry="2" />
<text  x="14.08" y="367.5" ></text>
</g>
<g >
<title>runpy.py:86:_run_code (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="485" width="7.4" height="15.0" fill="rgb(244,125,4)" rx="2" ry="2" />
<text  x="14.08" y="495.5" ></text>
</g>
<g >
<title>interactiveshell.py:3269:run_cell_async (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="213" width="1079.5" height="15.0" fill="rgb(207,4,8)" rx="2" ry="2" />
<text  x="113.52" y="223.5" >interactiveshell.py:3269:run_cell_async</text>
</g>
<g >
<title>active_allocated (76,201,472 bytes, 0.72%)</title><rect x="10.0" y="517" width="8.5" height="15.0" fill="rgb(252,211,52)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>events.py:80:_run (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="373" width="1079.5" height="15.0" fill="rgb(228,76,35)" rx="2" ry="2" />
<text  x="113.52" y="383.5" >events.py:80:_run</text>
</g>
<g >
<title>linear.py:114:forward (2,182,840 bytes, 0.02%)</title><rect x="17.8" y="85" width="0.2" height="15.0" fill="rgb(254,214,24)" rx="2" ry="2" />
<text  x="20.78" y="95.5" ></text>
</g>
<g >
<title>interactiveshell.py:3508:run_code (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="181" width="7.4" height="15.0" fill="rgb(248,77,34)" rx="2" ry="2" />
<text  x="14.08" y="191.5" ></text>
</g>
<g >
<title>denoise.py:151:make_ci_graph_all_maxCH (6,881,280 bytes, 0.07%)</title><rect x="11.2" y="149" width="0.8" height="15.0" fill="rgb(225,44,11)" rx="2" ry="2" />
<text  x="14.18" y="159.5" ></text>
</g>
<g >
<title>container.py:217:forward (1,369,600 bytes, 0.01%)</title><rect x="110.5" y="101" width="0.2" height="15.0" fill="rgb(249,33,41)" rx="2" ry="2" />
<text  x="113.52" y="111.5" ></text>
</g>
<g >
<title>conv.py:313:forward (9,622,984,192 bytes, 91.30%)</title><rect x="111.5" y="53" width="1077.3" height="15.0" fill="rgb(253,196,45)" rx="2" ry="2" />
<text  x="114.49" y="63.5" >conv.py:313:forward</text>
</g>
<g >
<title>asyncio.py:195:start (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="421" width="7.4" height="15.0" fill="rgb(214,72,33)" rx="2" ry="2" />
<text  x="14.08" y="431.5" ></text>
</g>
<g >
<title>functional.py:378:einsum (2,579,720 bytes, 0.02%)</title><rect x="1189.7" y="133" width="0.3" height="15.0" fill="rgb(217,70,14)" rx="2" ry="2" />
<text  x="1192.69" y="143.5" ></text>
</g>
<g >
<title>interactiveshell.py:3508:run_code (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="181" width="1079.5" height="15.0" fill="rgb(248,146,3)" rx="2" ry="2" />
<text  x="113.52" y="191.5" >interactiveshell.py:3508:run_code</text>
</g>
<g >
<title>inactive (10,464,084,480 bytes, 99.28%)</title><rect x="18.5" y="517" width="1171.5" height="15.0" fill="rgb(220,10,40)" rx="2" ry="2" />
<text  x="21.53" y="527.5" >inactive</text>
</g>
<g >
<title>interactiveshell.py:3448:run_ast_nodes (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="197" width="1079.5" height="15.0" fill="rgb(243,202,16)" rx="2" ry="2" />
<text  x="113.52" y="207.5" >interactiveshell.py:3448:run_ast_nodes</text>
</g>
<g >
<title>kernelapp.py:725:start (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="437" width="7.4" height="15.0" fill="rgb(213,150,26)" rx="2" ry="2" />
<text  x="14.08" y="447.5" ></text>
</g>
<g >
<title>runpy.py:86:_run_code (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="485" width="1079.5" height="15.0" fill="rgb(252,183,13)" rx="2" ry="2" />
<text  x="113.52" y="495.5" >runpy.py:86:_run_code</text>
</g>
<g >
<title>zmqshell.py:540:run_cell (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="277" width="1079.5" height="15.0" fill="rgb(206,91,47)" rx="2" ry="2" />
<text  x="113.52" y="287.5" >zmqshell.py:540:run_cell</text>
</g>
<g >
<title>ipykernel_launcher.py:17:&lt;module&gt; (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="469" width="1079.5" height="15.0" fill="rgb(210,71,9)" rx="2" ry="2" />
<text  x="113.52" y="479.5" >ipykernel_launcher.py:17:&lt;module&gt;</text>
</g>
<g >
<title>denoise.py:604:roll_by_gather (4,365,680 bytes, 0.04%)</title><rect x="18.0" y="133" width="0.5" height="15.0" fill="rgb(247,7,17)" rx="2" ry="2" />
<text  x="21.02" y="143.5" ></text>
</g>
<g >
<title>runpy.py:196:_run_module_as_main (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="501" width="7.4" height="15.0" fill="rgb(250,21,9)" rx="2" ry="2" />
<text  x="14.08" y="511.5" ></text>
</g>
<g >
<title>denoise.py:389:multichan_phase_shift_denoise_preshift_maxCH_neighbor_unshift (2,182,840 bytes, 0.02%)</title><rect x="12.0" y="149" width="0.3" height="15.0" fill="rgb(240,157,47)" rx="2" ry="2" />
<text  x="15.02" y="159.5" ></text>
</g>
<g >
<title>zmqshell.py:540:run_cell (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="277" width="7.4" height="15.0" fill="rgb(208,217,45)" rx="2" ry="2" />
<text  x="14.08" y="287.5" ></text>
</g>
<g >
<title>denoise.py:49:forward (2,182,840 bytes, 0.02%)</title><rect x="17.8" y="117" width="0.2" height="15.0" fill="rgb(248,8,26)" rx="2" ry="2" />
<text  x="20.78" y="127.5" ></text>
</g>
<g >
<title>asyncio.py:195:start (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="421" width="1079.5" height="15.0" fill="rgb(224,150,48)" rx="2" ry="2" />
<text  x="113.52" y="431.5" >asyncio.py:195:start</text>
</g>
<g >
<title>module.py:1501:_call_impl (9,622,984,192 bytes, 91.30%)</title><rect x="111.5" y="101" width="1077.3" height="15.0" fill="rgb(253,17,1)" rx="2" ry="2" />
<text  x="114.49" y="111.5" >module.py:1501:_call_impl</text>
</g>
<g >
<title>functional.py:1457:relu (15,442,240 bytes, 0.15%)</title><rect x="16.0" y="37" width="1.8" height="15.0" fill="rgb(228,222,17)" rx="2" ry="2" />
<text  x="19.05" y="47.5" ></text>
</g>
<g >
<title>module.py:1501:_call_impl (1,048,576 bytes, 0.01%)</title><rect x="1188.8" y="101" width="0.1" height="15.0" fill="rgb(252,5,26)" rx="2" ry="2" />
<text  x="1191.80" y="111.5" ></text>
</g>
<g >
<title>module.py:1501:_call_impl (2,182,840 bytes, 0.02%)</title><rect x="17.8" y="101" width="0.2" height="15.0" fill="rgb(247,221,1)" rx="2" ry="2" />
<text  x="20.78" y="111.5" ></text>
</g>
<g >
<title>base_events.py:1909:_run_once (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="389" width="7.4" height="15.0" fill="rgb(223,7,4)" rx="2" ry="2" />
<text  x="14.08" y="399.5" ></text>
</g>
<g >
<title>base_events.py:603:run_forever (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="405" width="1079.5" height="15.0" fill="rgb(251,177,14)" rx="2" ry="2" />
<text  x="113.52" y="415.5" >base_events.py:603:run_forever</text>
</g>
<g >
<title>application.py:1043:launch_instance (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="453" width="1079.5" height="15.0" fill="rgb(246,191,32)" rx="2" ry="2" />
<text  x="113.52" y="463.5" >application.py:1043:launch_instance</text>
</g>
<g >
<title>module.py:1501:_call_impl (51,395,960 bytes, 0.49%)</title><rect x="12.3" y="133" width="5.7" height="15.0" fill="rgb(231,26,16)" rx="2" ry="2" />
<text  x="15.27" y="143.5" ></text>
</g>
<g >
<title>denoise.py:393:multichan_phase_shift_denoise_preshift_maxCH_neighbor_unshift (4,365,680 bytes, 0.04%)</title><rect x="18.0" y="149" width="0.5" height="15.0" fill="rgb(210,5,9)" rx="2" ry="2" />
<text  x="21.02" y="159.5" ></text>
</g>
<g >
<title>denoise.py:100:phase_shift_and_hallucination_idx_preshift (2,182,840 bytes, 0.02%)</title><rect x="1189.2" y="133" width="0.2" height="15.0" fill="rgb(216,175,51)" rx="2" ry="2" />
<text  x="1192.20" y="143.5" ></text>
</g>
<g >
<title>denoise.py:483:multichan_phase_shift_denoise_preshift_maxCH_neighbor_unshift (2,579,720 bytes, 0.02%)</title><rect x="1189.7" y="149" width="0.3" height="15.0" fill="rgb(243,194,40)" rx="2" ry="2" />
<text  x="1192.69" y="159.5" ></text>
</g>
<g >
<title>application.py:1043:launch_instance (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="453" width="7.4" height="15.0" fill="rgb(206,103,17)" rx="2" ry="2" />
<text  x="14.08" y="463.5" ></text>
</g>
<g >
<title>kernelbase.py:502:process_one (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="341" width="1079.5" height="15.0" fill="rgb(217,170,31)" rx="2" ry="2" />
<text  x="113.52" y="351.5" >kernelbase.py:502:process_one</text>
</g>
<g >
<title>activation.py:103:forward (15,442,240 bytes, 0.15%)</title><rect x="16.0" y="53" width="1.8" height="15.0" fill="rgb(247,109,34)" rx="2" ry="2" />
<text  x="19.05" y="63.5" ></text>
</g>
<g >
<title>726351746.py:49:&lt;module&gt; (58,158,080 bytes, 0.55%)</title><rect x="12.0" y="165" width="6.5" height="15.0" fill="rgb(240,10,25)" rx="2" ry="2" />
<text  x="15.02" y="175.5" ></text>
</g>
<g >
<title>denoise.py:46:forward (1,369,600 bytes, 0.01%)</title><rect x="110.5" y="133" width="0.2" height="15.0" fill="rgb(216,69,9)" rx="2" ry="2" />
<text  x="113.52" y="143.5" ></text>
</g>
<g >
<title>async_helpers.py:129:_pseudo_sync_runner (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="229" width="7.4" height="15.0" fill="rgb(208,117,7)" rx="2" ry="2" />
<text  x="14.08" y="239.5" ></text>
</g>
<g >
<title>module.py:1501:_call_impl (1,369,600 bytes, 0.01%)</title><rect x="110.5" y="117" width="0.2" height="15.0" fill="rgb(225,51,3)" rx="2" ry="2" />
<text  x="113.52" y="127.5" ></text>
</g>
<g >
<title>denoise.py:94:phase_shift_and_hallucination_idx_preshift (2,182,840 bytes, 0.02%)</title><rect x="1189.4" y="133" width="0.3" height="15.0" fill="rgb(248,156,41)" rx="2" ry="2" />
<text  x="1192.44" y="143.5" ></text>
</g>
<g >
<title>module.py:1501:_call_impl (9,622,984,192 bytes, 91.30%)</title><rect x="111.5" y="69" width="1077.3" height="15.0" fill="rgb(245,31,41)" rx="2" ry="2" />
<text  x="114.49" y="79.5" >module.py:1501:_call_impl</text>
</g>
<g >
<title>denoise.py:45:forward (33,770,880 bytes, 0.32%)</title><rect x="12.3" y="117" width="3.7" height="15.0" fill="rgb(243,57,22)" rx="2" ry="2" />
<text  x="15.27" y="127.5" ></text>
</g>
<g >
<title>kernelbase.py:729:execute_request (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="309" width="1079.5" height="15.0" fill="rgb(247,28,45)" rx="2" ry="2" />
<text  x="113.52" y="319.5" >kernelbase.py:729:execute_request</text>
</g>
<g >
<title>base_events.py:1909:_run_once (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="389" width="1079.5" height="15.0" fill="rgb(246,96,29)" rx="2" ry="2" />
<text  x="113.52" y="399.5" >base_events.py:1909:_run_once</text>
</g>
<g >
<title>kernelapp.py:725:start (9,642,353,302 bytes, 91.48%)</title><rect x="110.5" y="437" width="1079.5" height="15.0" fill="rgb(208,121,39)" rx="2" ry="2" />
<text  x="113.52" y="447.5" >kernelapp.py:725:start</text>
</g>
<g >
<title>denoise.py:392:multichan_phase_shift_denoise_preshift_maxCH_neighbor_unshift (51,395,960 bytes, 0.49%)</title><rect x="12.3" y="149" width="5.7" height="15.0" fill="rgb(243,220,12)" rx="2" ry="2" />
<text  x="15.27" y="159.5" ></text>
</g>
<g >
<title>base_events.py:603:run_forever (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="405" width="7.4" height="15.0" fill="rgb(247,35,4)" rx="2" ry="2" />
<text  x="14.08" y="415.5" ></text>
</g>
<g >
<title>functional.py:1457:relu (33,770,880 bytes, 0.32%)</title><rect x="12.3" y="37" width="3.7" height="15.0" fill="rgb(243,100,54)" rx="2" ry="2" />
<text  x="15.27" y="47.5" ></text>
</g>
<g >
<title>denoise.py:46:forward (15,442,240 bytes, 0.15%)</title><rect x="16.0" y="117" width="1.8" height="15.0" fill="rgb(249,147,32)" rx="2" ry="2" />
<text  x="19.05" y="127.5" ></text>
</g>
<g >
<title>kernelbase.py:409:dispatch_shell (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="325" width="7.4" height="15.0" fill="rgb(224,159,41)" rx="2" ry="2" />
<text  x="14.08" y="335.5" ></text>
</g>
<g >
<title>kernelbase.py:729:execute_request (66,538,612 bytes, 0.63%)</title><rect x="11.1" y="309" width="7.4" height="15.0" fill="rgb(220,43,13)" rx="2" ry="2" />
<text  x="14.08" y="319.5" ></text>
</g>
<g >
<title>container.py:217:forward (33,770,880 bytes, 0.32%)</title><rect x="12.3" y="85" width="3.7" height="15.0" fill="rgb(234,139,23)" rx="2" ry="2" />
<text  x="15.27" y="95.5" ></text>
</g>
<g >
<title>726351746.py:49:&lt;module&gt; (9,640,983,702 bytes, 91.47%)</title><rect x="110.7" y="165" width="1079.3" height="15.0" fill="rgb(241,136,37)" rx="2" ry="2" />
<text  x="113.68" y="175.5" >726351746.py:49:&lt;module&gt;</text>
</g>
</g>
</svg>
